
import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ANIRUDH
 */
public class Room extends javax.swing.JFrame {

    /**
     * Creates new form Room
     */
    public Room() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        customerIDTxt = new javax.swing.JTextField();
        roomIDTxt = new javax.swing.JTextField();
        dayTxt = new javax.swing.JTextField();
        TotalTxt = new javax.swing.JTextField();
        addbtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        DeleteBtn = new javax.swing.JButton();
        ClearBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        roomTable = new javax.swing.JTable();
        paymentBox = new javax.swing.JComboBox<>();
        Roombox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Cardtype = new javax.swing.JPanel();
        creditrb = new javax.swing.JRadioButton();
        Debitrb = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        charge = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        acyes = new javax.swing.JRadioButton();
        acno = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1290, 850));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Room Details");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(520, 20, 576, 42);

        jLabel2.setText("Customer ID");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(30, 98, 110, 16);

        jLabel3.setText("Room ID");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(30, 142, 140, 16);

        jLabel4.setText("Days Checked In");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(30, 194, 140, 16);

        jLabel5.setText("Total");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(30, 281, 130, 16);

        customerIDTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customerIDTxtMouseClicked(evt);
            }
        });
        getContentPane().add(customerIDTxt);
        customerIDTxt.setBounds(286, 95, 93, 22);
        getContentPane().add(roomIDTxt);
        roomIDTxt.setBounds(286, 139, 93, 22);
        getContentPane().add(dayTxt);
        dayTxt.setBounds(286, 191, 93, 22);
        getContentPane().add(TotalTxt);
        TotalTxt.setBounds(286, 278, 93, 22);

        addbtn.setText("Add");
        addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbtnActionPerformed(evt);
            }
        });
        getContentPane().add(addbtn);
        addbtn.setBounds(52, 398, 80, 25);

        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        getContentPane().add(updateBtn);
        updateBtn.setBounds(349, 398, 100, 25);

        DeleteBtn.setText("Delete");
        DeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBtnActionPerformed(evt);
            }
        });
        getContentPane().add(DeleteBtn);
        DeleteBtn.setBounds(529, 398, 110, 25);

        ClearBtn.setText("Clear");
        ClearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearBtnActionPerformed(evt);
            }
        });
        getContentPane().add(ClearBtn);
        ClearBtn.setBounds(716, 398, 100, 25);

        roomTable.setAutoCreateRowSorter(true);
        roomTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer ID", "Room ID", "Room_Type", "Days", "AC Facility", "Mode Payment", "Card used", "Net Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        roomTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                roomTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(roomTable);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 427, 1230, 394);

        paymentBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cash ", "Card" }));
        paymentBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                paymentBoxItemStateChanged(evt);
            }
        });
        paymentBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentBoxActionPerformed(evt);
            }
        });
        getContentPane().add(paymentBox);
        paymentBox.setBounds(931, 121, 90, 22);

        Roombox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Single", "Double", "Deluxe", "Platinum" }));
        getContentPane().add(Roombox);
        Roombox.setBounds(931, 178, 90, 22);

        jLabel6.setText("Mode of payment");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(723, 124, 140, 16);

        jLabel7.setText("Type of Room");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(740, 181, 110, 16);

        Cardtype.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Card Type", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18))); // NOI18N
        Cardtype.setOpaque(false);

        creditrb.setText("Credit");
        creditrb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditrbActionPerformed(evt);
            }
        });

        Debitrb.setText("Debit");
        Debitrb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DebitrbActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CardtypeLayout = new javax.swing.GroupLayout(Cardtype);
        Cardtype.setLayout(CardtypeLayout);
        CardtypeLayout.setHorizontalGroup(
            CardtypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CardtypeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CardtypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Debitrb)
                    .addComponent(creditrb))
                .addContainerGap(119, Short.MAX_VALUE))
        );
        CardtypeLayout.setVerticalGroup(
            CardtypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CardtypeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Debitrb)
                .addGap(18, 18, 18)
                .addComponent(creditrb)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        getContentPane().add(Cardtype);
        Cardtype.setBounds(1088, 121, 202, 137);

        jLabel8.setText("Charge ");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(30, 235, 110, 16);
        getContentPane().add(charge);
        charge.setBounds(286, 229, 93, 22);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "AC Facility", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18))); // NOI18N
        jPanel2.setOpaque(false);

        acyes.setText("Yes");
        acyes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acyesActionPerformed(evt);
            }
        });

        acno.setText("No");
        acno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acnoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(acyes)
                    .addComponent(acno))
                .addContainerGap(70, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(acyes)
                .addGap(18, 18, 18)
                .addComponent(acno)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(740, 229, 139, 135);

        jButton1.setText("Calculate");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(170, 398, 120, 25);

        jButton2.setText("Back to Customer Page");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(865, 398, 170, 25);

        jButton3.setText("Print ");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(1054, 398, 120, 25);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
private void LoadUsersIntoGrid () {
     Connection conn = null;

          try {
              conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/restaurant", "root", "admin");
              Statement st = conn.createStatement();

              String viewUsers ="Select * From room_details";
              ResultSet rs = st.executeQuery(viewUsers);
              DefaultTableModel uTable = (DefaultTableModel)roomTable.getModel();   
              uTable.setRowCount(0);
              
              while( rs.next() ) {
                  
                  
                  Object table[] = {rs.getString("Customer_ID"), rs.getString("Room_ID"),rs.getString("Room_Type"),rs.getString("Days"),rs.getString("AC_Facility"),rs.getString("Mode_of_Payment"),rs.getString("Card_Used"),rs.getString("NetAmount")};
                   
                  
                  uTable.addRow(table);
              }
             
          } 
          catch (Exception e)

          {
              System.out.println(e);
            


          }
}
private void clear()
{
    customerIDTxt.setText("");
roomIDTxt.setText("");
TotalTxt.setText("");
paymentBox.setSelectedItem("Cash");
Debitrb.setSelected(false);
acyes.setSelected(false);
acno.setSelected(false);
creditrb.setSelected(false);
charge.setText("");
TotalTxt.setText("");
dayTxt.setText("");
Roombox.setSelectedItem("Single");
}
    
    private void addbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbtnActionPerformed
try{
     Class.forName("com.mysql.cj.jdbc.Driver");
        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/restaurant","root","admin"); 
        Statement st =conn.createStatement();
           
        String CustomerID = customerIDTxt.getText();
        String rid = roomIDTxt.getText();
        String days = dayTxt.getText();
        String roomtype = Roombox.getSelectedItem().toString();
       String netamt= TotalTxt.getText();
        String AC="";
        if(acyes.isSelected()==true)
        AC="Y";
        if(acno.isSelected()==true)
            AC="N";
        String Modepayment=paymentBox.getSelectedItem().toString();
        String cardused="";
        if(Debitrb.isSelected()==true)
            cardused="Debit";
        else if(creditrb.isSelected()==true)
            cardused="Credit";
        else cardused="Nil";
        String insert = "INSERT INTO restaurant.room_details (Customer_ID, Room_ID,Room_Type,Days,AC_Facility,Mode_of_Payment,Card_Used,NetAmount)  VALUES ('"+CustomerID+"', '"+rid+"', '"+roomtype+"', '"+days+"','"+AC+"','"+Modepayment+"','"+cardused+"','"+netamt+"')";
        int a= st.executeUpdate(insert);
        if(a>0)
        {
        JOptionPane.showMessageDialog(null, "Succesfully Inserted The user's Data");
        Object o[]= {CustomerID,rid,roomtype,days,AC,Modepayment,cardused,netamt};
        DefaultTableModel dmodel= (DefaultTableModel) roomTable.getModel();
        dmodel.addRow(o);
        LoadUsersIntoGrid();
        clear();
        }else 
            JOptionPane.showMessageDialog(null,"Error Inserting record");
  
        }
         catch(Exception e)
{
    System.out.println("Error"+e);
            
}// TODO add your handling code here:
    }//GEN-LAST:event_addbtnActionPerformed

    private void paymentBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_paymentBoxItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_paymentBoxItemStateChanged

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        this.getContentPane().setBackground(Color.white);
        LoadUsersIntoGrid();
        Cardtype.setVisible(false);// TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated

    private void paymentBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentBoxActionPerformed
if(paymentBox.getSelectedItem().toString().equals("Card"))
  Cardtype.setVisible(true);
else
Cardtype.setVisible(false);// TODO add your handling code here:
    }//GEN-LAST:event_paymentBoxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
int cpd=0,ac=0;double disc=0,netamt=0.0;
int days=Integer.parseInt(dayTxt.getText());
        if(Roombox.getSelectedItem().toString().equals("Single"))
            cpd=4000;
        if(Roombox.getSelectedItem().toString().equals("Double"))
            cpd=5500;
        if(Roombox.getSelectedItem().toString().equals("Deluxe"))
            cpd=6500;
        if(Roombox.getSelectedItem().toString().equals("Platinum"))
            cpd=8000;
        if(acyes.isSelected()==true)
            ac=500;
        if(acno.isSelected()==true)
            ac=0;
        int tot=(days*cpd)+ac;
        charge.setText(""+cpd);
        if(Debitrb.isSelected()==true)
            disc=0.05*tot;
        if(creditrb.isSelected()==true)
            disc=0.06*tot;
        netamt=tot-disc;
        TotalTxt.setText(""+netamt);
        
    // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void customerIDTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerIDTxtMouseClicked
        try{
            Connection conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/restaurant","root","admin");
            Statement st =conn.createStatement();
            ResultSet rs=st.executeQuery("Select*from customer_details where Customer_ID='"+customerIDTxt.getText()+"'");
              while(rs.next()){
            String in=rs.getString("Arrival");
            String out=rs.getString("CheckOut");
            int ckin=Integer.parseInt(in.substring(8,10));
            int ckout=Integer.parseInt(out.substring(8,10));
            int days=Math.abs(ckout-ckin);
            dayTxt.setText(""+days);
              }
              }catch(Exception e)
        {// TODO add your handling code here:
        System.out.println("Error:"+e);}
    }//GEN-LAST:event_customerIDTxtMouseClicked

    private void acyesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acyesActionPerformed
acno.setSelected(false);        // TODO add your handling code here:
    }//GEN-LAST:event_acyesActionPerformed

    private void acnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acnoActionPerformed
acyes.setSelected(false);        // TODO add your handling code here:
    }//GEN-LAST:event_acnoActionPerformed

    private void DebitrbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DebitrbActionPerformed
creditrb.setSelected(false);
// TODO add your handling code here:
    }//GEN-LAST:event_DebitrbActionPerformed

    private void creditrbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditrbActionPerformed
Debitrb.setSelected(false);        // TODO add your handling code here:
    }//GEN-LAST:event_creditrbActionPerformed

    private void DeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBtnActionPerformed
          try {
             Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/restaurant", "root", "admin");
              Statement st = conn.createStatement();

              String deleteCustomer = "DELETE from restaurant.room_details where Room_ID ='"+roomIDTxt.getText()+"'";
              int a= st.executeUpdate(deleteCustomer);
          if(a>0)
          {
              LoadUsersIntoGrid();
           JOptionPane.showMessageDialog(null,"Record deleted Successfully");  
           clear();
             
          }
          else
              JOptionPane.showMessageDialog(null,"Error deleting record");
          }
          catch (Exception e)

          {
              System.out.println(e);
            


          }
        // TODO add your handling code here:
    }//GEN-LAST:event_DeleteBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
 try{
     Class.forName("com.mysql.cj.jdbc.Driver");
        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/restaurant","root","admin"); 
        Statement st =conn.createStatement();
       String ac="",card="";
       if(acyes.isSelected())
            ac="Y";
       if(acno.isSelected())
           ac="N";
       if(Debitrb.isSelected()==true)
           card="Debit";
       if(creditrb.isSelected()==true)
           card="Credit";
                        String updateCustomers = "UPDATE restaurant.room_details SET "
                      + "Room_Type= '" +Roombox.getSelectedItem()+
                      "', Days='" +dayTxt.getText()+
                      "',AC_Facility='"+ac+"',Mode_of_Payment='"+paymentBox.getSelectedItem()+"',Card_Used='"+card+"',NetAmount='"+TotalTxt.getText()+"' WHERE room_ID = '"+roomIDTxt.getText()+"'";
                     int a=   st.executeUpdate(updateCustomers);
          if(a>0)
          {
              LoadUsersIntoGrid();
             JOptionPane.showMessageDialog(null,"Record Updated Succesfully");
             clear();//this method clears all the textfields automatically instead of manually pressing clear button #laziness
                       
          }
          else
              JOptionPane.showMessageDialog(null,"Error");
       }
                
       catch (Exception e)

          {
              System.out.println(e);
            


          }
        // TODO add your handling code here:
    }//GEN-LAST:event_updateBtnActionPerformed

    private void roomTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roomTableMouseClicked
 int b = roomTable.getSelectedRow();
DefaultTableModel dmodel = (DefaultTableModel) roomTable.getModel();
customerIDTxt.setText(dmodel.getValueAt(b,0).toString());
roomIDTxt.setText(dmodel.getValueAt(b,1).toString());

Roombox.setSelectedItem(dmodel.getValueAt(b,2).toString());
if(dmodel.getValueAt(b,2).toString().equals("Single"))
    charge.setText(""+4000);

if(dmodel.getValueAt(b,2).toString().equals("Double"))
    charge.setText(""+5500);
if(dmodel.getValueAt(b,2).toString().equals("Deluxe"))
    charge.setText(""+6500);
if(dmodel.getValueAt(b,2).toString().equals("Platinum"))
    charge.setText(""+8000);


dayTxt.setText(dmodel.getValueAt(b,3).toString());
if(dmodel.getValueAt(b,4).toString().equals("Y"))
    acyes.setSelected(true);
if(dmodel.getValueAt(b,4).toString().equals("N"))
acno.setSelected(false);
if(dmodel.getValueAt(b,5).toString().equals("Cash"))
    paymentBox.setSelectedItem("Cash");
if(dmodel.getValueAt(b,5).toString().equals("Card"))
    paymentBox.setSelectedItem("Card");
if(dmodel.getValueAt(b,6).toString().equals("Debit"))
    Debitrb.setSelected(true);
if(dmodel.getValueAt(b,6).toString().equals("Credit"))
    creditrb.setSelected(true);
TotalTxt.setText(dmodel.getValueAt(b,7).toString());
        // TODO add your handling code here:
    }//GEN-LAST:event_roomTableMouseClicked

    private void ClearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearBtnActionPerformed
 customerIDTxt.setText("");
roomIDTxt.setText("");
TotalTxt.setText("");
paymentBox.setSelectedItem("Cash");
Debitrb.setSelected(false);
acyes.setSelected(false);
acno.setSelected(false);
creditrb.setSelected(false);
charge.setText("");
TotalTxt.setText("");
dayTxt.setText("");
Roombox.setSelectedItem("Single");        // TODO add your handling code here:
    }//GEN-LAST:event_ClearBtnActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
Customer ob= new Customer();
ob.setVisible(true);
this.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
Bill ob= new Bill();
ob.setVisible(true);
this.dispose();
// TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Room.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Room.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Room.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Room.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Room().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Cardtype;
    private javax.swing.JButton ClearBtn;
    private javax.swing.JRadioButton Debitrb;
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JComboBox<String> Roombox;
    private javax.swing.JTextField TotalTxt;
    private javax.swing.JRadioButton acno;
    private javax.swing.JRadioButton acyes;
    private javax.swing.JButton addbtn;
    private javax.swing.JTextField charge;
    private javax.swing.JRadioButton creditrb;
    private javax.swing.JTextField customerIDTxt;
    private javax.swing.JTextField dayTxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> paymentBox;
    private javax.swing.JTextField roomIDTxt;
    private javax.swing.JTable roomTable;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
